package com.example.eclipseweatherforecast;



import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URL;
import java.net.URLConnection;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONException;
import org.json.JSONObject;

import android.util.Log;

public class JSONParser {

	static InputStream is = null;
	static JSONObject jObj = null;
	static BufferedReader reader = null;
	static String json = "";

	// constructor
	public JSONParser() {

	}

	public JSONObject getJSONFromUrl(String url) {

		// Making URL request
		try {	
			
			URL ur = new URL(url);
			URLConnection urlconn = ur.openConnection();
			//HttpResponse httpResponse = httpClient.execute(httpPost);
			//HttpEntity httpEntity = httpResponse.getEntity();
			is = urlconn.getInputStream();	
			reader = new BufferedReader(new InputStreamReader(
					is, "iso-8859-1"), 8);
			StringBuffer buffer = new StringBuffer();
            String line = "";

            while ((line = reader.readLine()) != null) {
                buffer.append(line+"\n");
                Log.d("Response: ", "> " + line);   //here u ll get whole response...... :-) 

            }
            is.close();
			System.out.println("out="+buffer.toString());
			json = buffer.toString();
			
			Log.v("tag", "VAL= " + json);

		}
		catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		catch (Exception e) {
			Log.e("Buffer Error", "Error converting result " + e.toString());
		}
		
		try {
			//BufferedReader reader = new BufferedReader(new InputStreamReader(
			//		is, "iso-8859-1"), 8);
			//StringBuilder sb = new StringBuilder();
			//String line = null;
			//while ((line = reader.readLine()) != null) {
				//sb.append(line + "\n");
			//}
			
		} catch (Exception e) {
			Log.e("Buffer Error", "Error converting result " + e.toString());
		}

		// try parse the string to a JSON object
		try {
			jObj = new JSONObject(json);
		} catch (JSONException e) {
			Log.e("JSON Parser", "Error parsing data " + e.toString());
		}

		// return JSON String
		return jObj;

	}
}
