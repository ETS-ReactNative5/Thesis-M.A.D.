{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\Saloni.LAP\\\\Documents\\\\MSc\\\\Thesis\\\\Projects\\\\6.React\\\\weather-app-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject10(){var data=_taggedTemplateLiteral([\"\\n  position: relative;\\n  display: flex;\\n  overflow-x: scroll;\\n  overflow-y: hidden;\\n  scrollbar-color: lightgray #ffffff;\\n  scrollbar-width: thin;\\n  margin-top: 20px;\\n  padding-bottom: 20px;\\n  @media \",\" {\\n    order: 4;\\n  }\\n\"]);_templateObject10=function _templateObject10(){return data;};return data;}function _templateObject9(){var data=_taggedTemplateLiteral([\"\\n  flex-basis: 100%;\\n  margin: 20px 0;\\n  overflow: hidden;\\n\"]);_templateObject9=function _templateObject9(){return data;};return data;}function _templateObject8(){var data=_taggedTemplateLiteral([\"\\n  flex-basis: calc(100% / 3);\\n  padding: 10px;\\n  @media \",\" {\\n    padding: 20px 10px;\\n  }\\n\"]);_templateObject8=function _templateObject8(){return data;};return data;}function _templateObject7(){var data=_taggedTemplateLiteral([\"\\n  flex-basis: 100%;\\n  display: flex;\\n  flex-wrap: wrap;\\n  padding: 10px 0;\\n  margin: 20px 0;\\n  background-color: rgba(255, 255, 255, 0.2);\\n  border-radius: 10px;\\n  align-self: flex-start;\\n  @media \",\" {\\n    flex-basis: 50%;\\n  }\\n\"]);_templateObject7=function _templateObject7(){return data;};return data;}function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  display: block;\\n  font-size: 50px;\\n  font-weight: 400;\\n  color: #ffffff;\\n  @media \",\" {\\n    font-size: 70px;\\n  }\\n  @media \",\" {\\n    font-size: 90px;\\n  }\\n  @media \",\" {\\n    font-size: 110px;\\n  }\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  font-size: 70px;\\n  color: #ffffff;\\n  @media \",\" {\\n    font-size: 100px;\\n    justify-content: flex-end;\\n  }\\n  @media \",\" {\\n    font-size: 120px;\\n  }\\n  @media \",\" {\\n    font-size: 140px;\\n  }\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  flex-basis: 100%;\\n  display: grid;\\n  justify-content: center;\\n  align-items: center;\\n  grid-template-columns: auto 1fr;\\n  margin: 20px 0;\\n  grid-gap: 30px;\\n  @media \",\" {\\n    flex-basis: 50%;\\n    padding-right: 10px;\\n  }\\n  @media \",\" {\\n    grid-template-columns: 1fr 1fr;\\n    padding-right: 20px;\\n  }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  flex-basis: 100%;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: space-between;\\n  padding: 40px 0;\\n  opacity: 0;\\n  visibility: hidden;\\n  position: relative;\\n  top: 20px;\\n  animation: \",\" 0.5s 1.4s forwards;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import'./Result.sass';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCloud,faBolt,faCloudRain,faCloudShowersHeavy,faSnowflake,faSun,faSmog}from'@fortawesome/free-solid-svg-icons';import styled from'styled-components';import device from'../responsive/Device';import ForecastHour from'./ForecastHour';import ResultFadeIn from'./ResultFadeIn';import BigLabel from'./BigLabel';import MediumLabel from'./MediumLabel';import SmallLabel from'./SmallLabel';import Text from'./Text';var Results=styled.div(_templateObject(),ResultFadeIn);var LocationWrapper=styled.div(_templateObject2());var CurrentWeatherWrapper=styled.div(_templateObject3(),device.mobileL,device.tablet);var WeatherIcon=styled.div(_templateObject4(),device.tablet,device.laptop,device.laptopL);var TemperatureWrapper=styled.div(_templateObject5());var Temperature=styled.h3(_templateObject6(),device.tablet,device.laptop,device.laptopL);var WeatherDetailsWrapper=styled.div(_templateObject7(),device.mobileL);var WeatherDetail=styled.div(_templateObject8(),device.laptop);var ForecastWrapper=styled.div(_templateObject9());var Forecast=styled.div(_templateObject10(),device.laptop);var Result=function Result(_ref){var weather=_ref.weather;var city=weather.city,country=weather.country,date=weather.date,description=weather.description,main=weather.main,temp=weather.temp,sunset=weather.sunset,sunrise=weather.sunrise,humidity=weather.humidity,wind=weather.wind,highestTemp=weather.highestTemp,lowestTemp=weather.lowestTemp,forecast=weather.forecast;var forecasts=forecast.map(function(item){return React.createElement(ForecastHour,{key:item.dt,temp:Math.floor(item.main.temp*1)/1,icon:item.weather[0].icon,month:item.dt_txt.slice(5,7),day:item.dt_txt.slice(8,10),hour:item.dt_txt.slice(11,13)*1});});var weatherIcon=null;if(main==='Thunderstorm'){weatherIcon=React.createElement(FontAwesomeIcon,{icon:faBolt});}else if(main==='Drizzle'){weatherIcon=React.createElement(FontAwesomeIcon,{icon:faCloudRain});}else if(main==='Rain'){weatherIcon=React.createElement(FontAwesomeIcon,{icon:faCloudShowersHeavy});}else if(main==='Snow'){weatherIcon=React.createElement(FontAwesomeIcon,{icon:faSnowflake});}else if(main==='Clear'){weatherIcon=React.createElement(FontAwesomeIcon,{icon:faSun});}else if(main==='Clouds'){weatherIcon=React.createElement(FontAwesomeIcon,{icon:faCloud});}else{weatherIcon=React.createElement(FontAwesomeIcon,{icon:faSmog});}return React.createElement(Results,null,React.createElement(LocationWrapper,null,React.createElement(BigLabel,null,city,\", \",country),React.createElement(SmallLabel,{weight:\"400\"},date)),React.createElement(CurrentWeatherWrapper,null,React.createElement(WeatherIcon,null,weatherIcon),React.createElement(TemperatureWrapper,null,React.createElement(Temperature,null,Math.floor(temp),\"\\xB0\"),React.createElement(SmallLabel,{weight:\"400\",firstToUpperCase:true},description))),React.createElement(WeatherDetailsWrapper,null,React.createElement(WeatherDetail,null,React.createElement(SmallLabel,{align:\"center\",weight:\"400\"},Math.floor(highestTemp),\"\\xB0\"),React.createElement(Text,{align:\"center\"},\"Hight\")),React.createElement(WeatherDetail,null,React.createElement(SmallLabel,{align:\"center\",weight:\"400\"},wind,\"mph\"),React.createElement(Text,{align:\"center\"},\"Wind\")),React.createElement(WeatherDetail,null,React.createElement(SmallLabel,{align:\"center\",weight:\"400\"},sunrise),React.createElement(Text,{align:\"center\"},\"Sunrise\")),React.createElement(WeatherDetail,null,React.createElement(SmallLabel,{align:\"center\",weight:\"400\"},Math.floor(lowestTemp),\"\\xB0\"),React.createElement(Text,{align:\"center\"},\"Low\")),React.createElement(WeatherDetail,null,React.createElement(SmallLabel,{align:\"center\",weight:\"400\"},humidity,\"%\"),React.createElement(Text,{align:\"center\"},\"Rain\")),React.createElement(WeatherDetail,null,React.createElement(SmallLabel,{align:\"center\",weight:\"400\"},sunset),React.createElement(Text,{align:\"center\"},\"Sunset\"))),React.createElement(ForecastWrapper,null,React.createElement(MediumLabel,{weight:\"400\"},\"Forecast\"),React.createElement(Forecast,null,forecasts)));};export default Result;","map":{"version":3,"sources":["C:/Users/Saloni.LAP/Documents/MSc/Thesis/Projects/6.React/weather-app-react/src/components/Result.js"],"names":["React","FontAwesomeIcon","faCloud","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faSun","faSmog","styled","device","ForecastHour","ResultFadeIn","BigLabel","MediumLabel","SmallLabel","Text","Results","div","LocationWrapper","CurrentWeatherWrapper","mobileL","tablet","WeatherIcon","laptop","laptopL","TemperatureWrapper","Temperature","h3","WeatherDetailsWrapper","WeatherDetail","ForecastWrapper","Forecast","Result","weather","city","country","date","description","main","temp","sunset","sunrise","humidity","wind","highestTemp","lowestTemp","forecast","forecasts","map","item","dt","Math","floor","icon","dt_txt","slice","weatherIcon"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Result.sass';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCloud,\r\n  faBolt,\r\n  faCloudRain,\r\n  faCloudShowersHeavy,\r\n  faSnowflake,\r\n  faSun,\r\n  faSmog,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport styled from 'styled-components';\r\nimport device from '../responsive/Device';\r\nimport ForecastHour from './ForecastHour';\r\nimport ResultFadeIn from './ResultFadeIn';\r\nimport BigLabel from './BigLabel';\r\nimport MediumLabel from './MediumLabel';\r\nimport SmallLabel from './SmallLabel';\r\nimport Text from './Text';\r\n\r\nconst Results = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  padding: 40px 0;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  position: relative;\r\n  top: 20px;\r\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\r\n`;\r\n\r\nconst LocationWrapper = styled.div`\r\n  flex-basis: 100%;\r\n`;\r\n\r\nconst CurrentWeatherWrapper = styled.div`\r\n  flex-basis: 100%;\r\n  display: grid;\r\n  justify-content: center;\r\n  align-items: center;\r\n  grid-template-columns: auto 1fr;\r\n  margin: 20px 0;\r\n  grid-gap: 30px;\r\n  @media ${device.mobileL} {\r\n    flex-basis: 50%;\r\n    padding-right: 10px;\r\n  }\r\n  @media ${device.tablet} {\r\n    grid-template-columns: 1fr 1fr;\r\n    padding-right: 20px;\r\n  }\r\n`;\r\n\r\nconst WeatherIcon = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 70px;\r\n  color: #ffffff;\r\n  @media ${device.tablet} {\r\n    font-size: 100px;\r\n    justify-content: flex-end;\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: 120px;\r\n  }\r\n  @media ${device.laptopL} {\r\n    font-size: 140px;\r\n  }\r\n`;\r\n\r\nconst TemperatureWrapper = styled.div``;\r\n\r\nconst Temperature = styled.h3`\r\n  display: block;\r\n  font-size: 50px;\r\n  font-weight: 400;\r\n  color: #ffffff;\r\n  @media ${device.tablet} {\r\n    font-size: 70px;\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: 90px;\r\n  }\r\n  @media ${device.laptopL} {\r\n    font-size: 110px;\r\n  }\r\n`;\r\n\r\nconst WeatherDetailsWrapper = styled.div`\r\n  flex-basis: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 10px 0;\r\n  margin: 20px 0;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  border-radius: 10px;\r\n  align-self: flex-start;\r\n  @media ${device.mobileL} {\r\n    flex-basis: 50%;\r\n  }\r\n`;\r\n\r\nconst WeatherDetail = styled.div`\r\n  flex-basis: calc(100% / 3);\r\n  padding: 10px;\r\n  @media ${device.laptop} {\r\n    padding: 20px 10px;\r\n  }\r\n`;\r\n\r\nconst ForecastWrapper = styled.div`\r\n  flex-basis: 100%;\r\n  margin: 20px 0;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Forecast = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  overflow-x: scroll;\r\n  overflow-y: hidden;\r\n  scrollbar-color: lightgray #ffffff;\r\n  scrollbar-width: thin;\r\n  margin-top: 20px;\r\n  padding-bottom: 20px;\r\n  @media ${device.laptop} {\r\n    order: 4;\r\n  }\r\n`;\r\n\r\nconst Result = ({ weather }) => {\r\n  const {\r\n    city,\r\n    country,\r\n    date,\r\n    description,\r\n    main,\r\n    temp,\r\n    sunset,\r\n    sunrise,\r\n    humidity,\r\n    wind,\r\n    highestTemp,\r\n    lowestTemp,\r\n    forecast,\r\n  } = weather;\r\n\r\n  const forecasts = forecast.map(item => (\r\n    <ForecastHour\r\n      key={item.dt}\r\n      temp={Math.floor(item.main.temp * 1) / 1}\r\n      icon={item.weather[0].icon}\r\n      month={item.dt_txt.slice(5, 7)}\r\n      day={item.dt_txt.slice(8, 10)}\r\n      hour={item.dt_txt.slice(11, 13) * 1}\r\n    />\r\n  ));\r\n\r\n  let weatherIcon = null;\r\n\r\n  if (main === 'Thunderstorm') {\r\n    weatherIcon = <FontAwesomeIcon icon={faBolt} />;\r\n  } else if (main === 'Drizzle') {\r\n    weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\r\n  } else if (main === 'Rain') {\r\n    weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} />;\r\n  } else if (main === 'Snow') {\r\n    weatherIcon = <FontAwesomeIcon icon={faSnowflake} />;\r\n  } else if (main === 'Clear') {\r\n    weatherIcon = <FontAwesomeIcon icon={faSun} />;\r\n  } else if (main === 'Clouds') {\r\n    weatherIcon = <FontAwesomeIcon icon={faCloud} />;\r\n  } else {\r\n    weatherIcon = <FontAwesomeIcon icon={faSmog} />;\r\n  }\r\n\r\n  return (\r\n    <Results>\r\n      <LocationWrapper>\r\n        <BigLabel>\r\n          {city}, {country}\r\n        </BigLabel>\r\n        <SmallLabel weight=\"400\">{date}</SmallLabel>\r\n      </LocationWrapper>\r\n      <CurrentWeatherWrapper>\r\n        <WeatherIcon>{weatherIcon}</WeatherIcon>\r\n        <TemperatureWrapper>\r\n          <Temperature>{Math.floor(temp)}&#176;</Temperature>\r\n          <SmallLabel weight=\"400\" firstToUpperCase>\r\n            {description}\r\n          </SmallLabel>\r\n        </TemperatureWrapper>\r\n      </CurrentWeatherWrapper>\r\n      <WeatherDetailsWrapper>\r\n        <WeatherDetail>\r\n          <SmallLabel align=\"center\" weight=\"400\">\r\n            {Math.floor(highestTemp)}&#176;\r\n          </SmallLabel>\r\n          <Text align=\"center\">Hight</Text>\r\n        </WeatherDetail>\r\n        <WeatherDetail>\r\n          <SmallLabel align=\"center\" weight=\"400\">\r\n            {wind}mph\r\n          </SmallLabel>\r\n          <Text align=\"center\">Wind</Text>\r\n        </WeatherDetail>\r\n        <WeatherDetail>\r\n          <SmallLabel align=\"center\" weight=\"400\">\r\n            {sunrise}\r\n          </SmallLabel>\r\n          <Text align=\"center\">Sunrise</Text>\r\n        </WeatherDetail>\r\n        <WeatherDetail>\r\n          <SmallLabel align=\"center\" weight=\"400\">\r\n            {Math.floor(lowestTemp)}&#176;\r\n          </SmallLabel>\r\n          <Text align=\"center\">Low</Text>\r\n        </WeatherDetail>\r\n        <WeatherDetail>\r\n          <SmallLabel align=\"center\" weight=\"400\">\r\n            {humidity}%\r\n          </SmallLabel>\r\n          <Text align=\"center\">Rain</Text>\r\n        </WeatherDetail>\r\n        <WeatherDetail>\r\n          <SmallLabel align=\"center\" weight=\"400\">\r\n            {sunset}\r\n          </SmallLabel>\r\n          <Text align=\"center\">Sunset</Text>\r\n        </WeatherDetail>\r\n      </WeatherDetailsWrapper>\r\n      <ForecastWrapper>\r\n        <MediumLabel weight=\"400\">Forecast</MediumLabel>\r\n        <Forecast>{forecasts}</Forecast>\r\n      </ForecastWrapper>\r\n    </Results>\r\n  );\r\n};\r\n\r\nResult.propTypes = {\r\n  weather: PropTypes.shape({\r\n    city: PropTypes.string,\r\n    country: PropTypes.string,\r\n    date: PropTypes.string,\r\n    description: PropTypes.string,\r\n    main: PropTypes.string,\r\n    temp: PropTypes.number,\r\n    sunrise: PropTypes.string,\r\n    sunset: PropTypes.string,\r\n    humidity: PropTypes.number,\r\n    wind: PropTypes.number,\r\n    highestTemp: PropTypes.number,\r\n    lowestTemp: PropTypes.number,\r\n    forecast: PropTypes.array,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Result;\r\n"]},"metadata":{},"sourceType":"module"}