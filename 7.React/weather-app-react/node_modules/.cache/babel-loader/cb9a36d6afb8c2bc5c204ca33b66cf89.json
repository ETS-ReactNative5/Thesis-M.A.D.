{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\Saloni.LAP\\\\Documents\\\\MSc\\\\Thesis\\\\Projects\\\\6.React\\\\weather-app-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  display: block;\\n  height: 50px;\\n  width: 50px;\\n  margin: 0 auto;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  flex-shrink: 0;\\n  flex-basis: 90px;\\n  padding: 10px;\\n  margin: 0 5px;\\n  border-radius: 5px;\\n  background-color: rgba(255, 255, 255, 0.2);\\n  &:first-child {\\n    margin-left: 0;\\n  }\\n  &:last-child {\\n    margin-right: 0;\\n  }\\n  @media \",\" {\\n    flex-basis: 110px;\\n  }\\n  @media \",\" {\\n    flex-basis: 125px;\\n  }\\n  @media \",\" {\\n    flex-basis: 140px;\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from'styled-components';import SmallLabel from'./SmallLabel';import Text from'./Text';import device from'../responsive/Device';var ForecastWrapper=styled.div(_templateObject(),device.tablet,device.laptop,device.laptopL);var WeatherIcon=styled.img(_templateObject2());var ForecastHour=function ForecastHour(props){var temp=props.temp,month=props.month,day=props.day,hour=props.hour,icon=props.icon;var iconUrl=\"https://openweathermap.org/img/w/\".concat(icon,\".png\");return React.createElement(ForecastWrapper,null,React.createElement(Text,{align:\"center\"},month,\".\",day),React.createElement(Text,{align:\"center\"},hour,\":00\"),React.createElement(WeatherIcon,{src:iconUrl}),React.createElement(SmallLabel,{align:\"center\",weight:\"400\"},temp,\"\\xB0\"));};export default ForecastHour;","map":{"version":3,"sources":["C:/Users/Saloni.LAP/Documents/MSc/Thesis/Projects/6.React/weather-app-react/src/components/ForecastHour.js"],"names":["React","styled","SmallLabel","Text","device","ForecastWrapper","div","tablet","laptop","laptopL","WeatherIcon","img","ForecastHour","props","temp","month","day","hour","icon","iconUrl"],"mappings":"w4BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CAEA,GAAMC,CAAAA,eAAe,CAAGJ,MAAM,CAACK,GAAV,mBAaVF,MAAM,CAACG,MAbG,CAgBVH,MAAM,CAACI,MAhBG,CAmBVJ,MAAM,CAACK,OAnBG,CAArB,CAwBA,GAAMC,CAAAA,WAAW,CAAGT,MAAM,CAACU,GAAV,oBAAjB,CAOA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,CAAI,IACpBC,CAAAA,IADoB,CACaD,KADb,CACpBC,IADoB,CACdC,KADc,CACaF,KADb,CACdE,KADc,CACPC,GADO,CACaH,KADb,CACPG,GADO,CACFC,IADE,CACaJ,KADb,CACFI,IADE,CACIC,IADJ,CACaL,KADb,CACIK,IADJ,CAE5B,GAAMC,CAAAA,OAAO,4CAAuCD,IAAvC,QAAb,CAEA,MACE,qBAAC,eAAD,MACE,oBAAC,IAAD,EAAM,KAAK,CAAC,QAAZ,EACGH,KADH,KACWC,GADX,CADF,CAIE,oBAAC,IAAD,EAAM,KAAK,CAAC,QAAZ,EAAsBC,IAAtB,OAJF,CAKE,oBAAC,WAAD,EAAa,GAAG,CAAEE,OAAlB,EALF,CAME,oBAAC,UAAD,EAAY,KAAK,CAAC,QAAlB,CAA2B,MAAM,CAAC,KAAlC,EACGL,IADH,QANF,CADF,CAYD,CAhBD,CA0BA,cAAeF,CAAAA,YAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport SmallLabel from './SmallLabel';\r\nimport Text from './Text';\r\nimport device from '../responsive/Device';\r\n\r\nconst ForecastWrapper = styled.div`\r\n  flex-shrink: 0;\r\n  flex-basis: 90px;\r\n  padding: 10px;\r\n  margin: 0 5px;\r\n  border-radius: 5px;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  &:first-child {\r\n    margin-left: 0;\r\n  }\r\n  &:last-child {\r\n    margin-right: 0;\r\n  }\r\n  @media ${device.tablet} {\r\n    flex-basis: 110px;\r\n  }\r\n  @media ${device.laptop} {\r\n    flex-basis: 125px;\r\n  }\r\n  @media ${device.laptopL} {\r\n    flex-basis: 140px;\r\n  }\r\n`;\r\n\r\nconst WeatherIcon = styled.img`\r\n  display: block;\r\n  height: 50px;\r\n  width: 50px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ForecastHour = props => {\r\n  const { temp, month, day, hour, icon } = props;\r\n  const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\r\n\r\n  return (\r\n    <ForecastWrapper>\r\n      <Text align=\"center\">\r\n        {month}.{day}\r\n      </Text>\r\n      <Text align=\"center\">{hour}:00</Text>\r\n      <WeatherIcon src={iconUrl} />\r\n      <SmallLabel align=\"center\" weight=\"400\">\r\n        {temp}&#176;\r\n      </SmallLabel>\r\n    </ForecastWrapper>\r\n  );\r\n};\r\n\r\nForecastHour.propTypes = {\r\n  temp: PropTypes.number.isRequired,\r\n  month: PropTypes.string.isRequired,\r\n  day: PropTypes.string.isRequired,\r\n  hour: PropTypes.number.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ForecastHour;\r\n"]},"metadata":{},"sourceType":"module"}